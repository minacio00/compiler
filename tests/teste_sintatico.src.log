[32mLimite m√°ximo de mem√≥ria: 2097152 bytes[0m
[34m=== AN√ÅLISE L√âXICA ===[0m
   1: TOK_KW_PRINCIPAL 'principal'
   1: TOK_LPAREN      '('
   1: TOK_RPAREN      ')'
   1: TOK_LBRACE      '{'
   2: TOK_KW_INTEIRO  'inteiro'
   2: TOK_IDENTIFIER  '!a'
   2: TOK_COMMA       ','
   2: TOK_IDENTIFIER  '!b'
   2: TOK_COMMA       ','
   2: TOK_IDENTIFIER  '!c'
   2: TOK_ASSIGN      '='
   2: TOK_INTEGER_LITERAL '10'
   2: TOK_SEMICOLON   ';'
   3: TOK_KW_DECIMAL  'decimal'
   3: TOK_IDENTIFIER  '!x'
   3: TOK_ASSIGN      '='
   3: TOK_DECIMAL_LITERAL '3.14'
   3: TOK_COMMA       ','
   3: TOK_IDENTIFIER  '!y'
   3: TOK_SEMICOLON   ';'
   4: TOK_KW_TEXTO    'texto'
   4: TOK_IDENTIFIER  '!msg'
   4: TOK_ASSIGN      '='
   4: TOK_STRING_LITERAL 'Hello World'
   4: TOK_SEMICOLON   ';'
   6: TOK_KW_INTEIRO  'inteiro'
   6: TOK_IDENTIFIER  '!numeros'
   6: TOK_LBRACKET    '['
   6: TOK_INTEGER_LITERAL '5'
   6: TOK_RBRACKET    ']'
   6: TOK_SEMICOLON   ';'
   7: TOK_KW_DECIMAL  'decimal'
   7: TOK_IDENTIFIER  '!precos'
   7: TOK_LBRACKET    '['
   7: TOK_INTEGER_LITERAL '10'
   7: TOK_RBRACKET    ']'
   7: TOK_SEMICOLON   ';'
   9: TOK_IDENTIFIER  '!a'
   9: TOK_ASSIGN      '='
   9: TOK_INTEGER_LITERAL '5'
   9: TOK_SEMICOLON   ';'
  10: TOK_IDENTIFIER  '!c'
  10: TOK_ASSIGN      '='
  10: TOK_IDENTIFIER  '!b'
  10: TOK_STAR        '*'
  10: TOK_INTEGER_LITERAL '2'
  10: TOK_SEMICOLON   ';'
  12: TOK_IDENTIFIER  '!x'
  12: TOK_ASSIGN      '='
  12: TOK_IDENTIFIER  '!a'
  12: TOK_PLUS        '+'
  12: TOK_IDENTIFIER  '!b'
  12: TOK_STAR        '*'
  12: TOK_IDENTIFIER  '!c'
  12: TOK_SEMICOLON   ';'
  13: TOK_IDENTIFIER  '!y'
  13: TOK_ASSIGN      '='
  13: TOK_LPAREN      '('
  13: TOK_IDENTIFIER  '!a'
  13: TOK_PLUS        '+'
  13: TOK_IDENTIFIER  '!b'
  13: TOK_RPAREN      ')'
  13: TOK_SLASH       '/'
  13: TOK_INTEGER_LITERAL '2'
  13: TOK_SEMICOLON   ';'
  15: TOK_KW_SE       'se'
  15: TOK_LPAREN      '('
  15: TOK_IDENTIFIER  '!a'
  15: TOK_GT          '>'
  15: TOK_INTEGER_LITERAL '0'
  15: TOK_RPAREN      ')'
  15: TOK_LBRACE      '{'
  16: TOK_KW_ESCREVA  'escreva'
  16: TOK_LPAREN      '('
  16: TOK_STRING_LITERAL 'A √© positivo'
  16: TOK_RPAREN      ')'
  16: TOK_SEMICOLON   ';'
  19: TOK_KW_SE       'se'
  19: TOK_LPAREN      '('
  19: TOK_IDENTIFIER  '!b'
  19: TOK_LE          '<='
  19: TOK_INTEGER_LITERAL '10'
  19: TOK_AND         '&&'
  19: TOK_IDENTIFIER  '!c'
  19: TOK_GE          '>='
  19: TOK_INTEGER_LITERAL '5'
  19: TOK_RPAREN      ')'
  19: TOK_LBRACE      '{'
  20: TOK_KW_ESCREVA  'escreva'
  20: TOK_LPAREN      '('
  20: TOK_STRING_LITERAL 'B e C est√£o na faixa v√°lida'
  20: TOK_RPAREN      ')'
  20: TOK_SEMICOLON   ';'
  21: TOK_RBRACE      '}'
  23: TOK_KW_SE       'se'
  23: TOK_LPAREN      '('
  23: TOK_IDENTIFIER  '!a'
  23: TOK_EQ          '=='
  23: TOK_INTEGER_LITERAL '5'
  23: TOK_OR          '||'
  23: TOK_IDENTIFIER  '!b'
  23: TOK_EQ          '=='
  23: TOK_INTEGER_LITERAL '8'
  23: TOK_RPAREN      ')'
  23: TOK_LBRACE      '{'
  24: TOK_KW_ESCREVA  'escreva'
  24: TOK_LPAREN      '('
  24: TOK_STRING_LITERAL 'A √© 5 ou B √© 8'
  24: TOK_RPAREN      ')'
  24: TOK_SEMICOLON   ';'
  25: TOK_RBRACE      '}'
  27: TOK_KW_SE       'se'
  27: TOK_LPAREN      '('
  27: TOK_IDENTIFIER  '!a'
  27: TOK_GT          '>'
  27: TOK_INTEGER_LITERAL '0'
  27: TOK_RPAREN      ')'
  27: TOK_LBRACE      '{'
  28: TOK_KW_SE       'se'
  28: TOK_LPAREN      '('
  28: TOK_IDENTIFIER  '!b'
  28: TOK_GT          '>'
  28: TOK_INTEGER_LITERAL '0'
  28: TOK_RPAREN      ')'
  28: TOK_LBRACE      '{'
  29: TOK_KW_ESCREVA  'escreva'
  29: TOK_LPAREN      '('
  29: TOK_STRING_LITERAL 'Ambos s√£o positivos'
  29: TOK_RPAREN      ')'
  29: TOK_SEMICOLON   ';'
  30: TOK_RBRACE      '}'
  30: TOK_KW_SENAO    'senao'
  30: TOK_LBRACE      '{'
  31: TOK_KW_ESCREVA  'escreva'
  31: TOK_LPAREN      '('
  31: TOK_STRING_LITERAL 'A √© positivo, B n√£o'
  31: TOK_RPAREN      ')'
  31: TOK_SEMICOLON   ';'
  32: TOK_RBRACE      '}'
  33: TOK_RBRACE      '}'
  33: TOK_KW_SENAO    'senao'
  33: TOK_LBRACE      '{'
  34: TOK_KW_ESCREVA  'escreva'
  34: TOK_LPAREN      '('
  34: TOK_STRING_LITERAL 'A n√£o √© positivo'
  34: TOK_RPAREN      ')'
  34: TOK_SEMICOLON   ';'
  35: TOK_RBRACE      '}'
  37: TOK_IDENTIFIER  '!a'
  37: TOK_ASSIGN      '='
  37: TOK_INTEGER_LITERAL '1'
  37: TOK_SEMICOLON   ';'
  38: TOK_KW_ENQUANTO 'enquanto'
  38: TOK_LPAREN      '('
  38: TOK_IDENTIFIER  '!a'
  38: TOK_LE          '<='
  38: TOK_INTEGER_LITERAL '5'
  38: TOK_RPAREN      ')'
  38: TOK_LBRACE      '{'
  39: TOK_KW_ESCREVA  'escreva'
  39: TOK_LPAREN      '('
  39: TOK_STRING_LITERAL 'Contador:'
  39: TOK_COMMA       ','
  39: TOK_IDENTIFIER  '!a'
  39: TOK_RPAREN      ')'
  39: TOK_SEMICOLON   ';'
  40: TOK_IDENTIFIER  '!a'
  40: TOK_ASSIGN      '='
  40: TOK_IDENTIFIER  '!a'
  40: TOK_PLUS        '+'
  40: TOK_INTEGER_LITERAL '1'
  40: TOK_SEMICOLON   ';'
  41: TOK_RBRACE      '}'
  43: TOK_KW_PARA     'para'
  43: TOK_LPAREN      '('
  43: TOK_IDENTIFIER  '!i'
  43: TOK_ASSIGN      '='
  43: TOK_INTEGER_LITERAL '0'
  43: TOK_SEMICOLON   ';'
  43: TOK_IDENTIFIER  '!i'
  43: TOK_LT          '<'
  43: TOK_INTEGER_LITERAL '10'
  43: TOK_SEMICOLON   ';'
  43: TOK_IDENTIFIER  '!i'
  43: TOK_ASSIGN      '='
  43: TOK_IDENTIFIER  '!i'
  43: TOK_PLUS        '+'
  43: TOK_INTEGER_LITERAL '1'
  43: TOK_RPAREN      ')'
  43: TOK_LBRACE      '{'
  44: TOK_KW_SE       'se'
  44: TOK_LPAREN      '('
  44: TOK_IDENTIFIER  '!i'
  44: TOK_MODULO      '%'
  44: TOK_INTEGER_LITERAL '2'
  44: TOK_EQ          '=='
  44: TOK_INTEGER_LITERAL '0'
  44: TOK_RPAREN      ')'
  44: TOK_LBRACE      '{'
  45: TOK_KW_ESCREVA  'escreva'
  45: TOK_LPAREN      '('
  45: TOK_STRING_LITERAL 'Par:'
  45: TOK_COMMA       ','
  45: TOK_IDENTIFIER  '!i'
  45: TOK_RPAREN      ')'
  45: TOK_SEMICOLON   ';'
  46: TOK_RBRACE      '}'
  46: TOK_KW_SENAO    'senao'
  46: TOK_LBRACE      '{'
  47: TOK_KW_ESCREVA  'escreva'
  47: TOK_LPAREN      '('
  47: TOK_STRING_LITERAL '√çmpar:'
  47: TOK_COMMA       ','
  47: TOK_IDENTIFIER  '!i'
  47: TOK_RPAREN      ')'
  47: TOK_SEMICOLON   ';'
  48: TOK_RBRACE      '}'
  49: TOK_RBRACE      '}'
  51: TOK_KW_ESCREVA  'escreva'
  51: TOK_LPAREN      '('
  51: TOK_STRING_LITERAL 'Digite um n√∫mero:'
  51: TOK_RPAREN      ')'
  51: TOK_SEMICOLON   ';'
  52: TOK_KW_LEIA     'leia'
  52: TOK_LPAREN      '('
  52: TOK_IDENTIFIER  '!x'
  52: TOK_RPAREN      ')'
  52: TOK_SEMICOLON   ';'
  54: TOK_KW_ESCREVA  'escreva'
  54: TOK_LPAREN      '('
  54: TOK_STRING_LITERAL 'Voc√™ digitou:'
  54: TOK_COMMA       ','
  54: TOK_IDENTIFIER  '!x'
  54: TOK_RPAREN      ')'
  54: TOK_SEMICOLON   ';'
  55: TOK_KW_ESCREVA  'escreva'
  55: TOK_LPAREN      '('
  55: TOK_STRING_LITERAL 'O dobro √©:'
  55: TOK_COMMA       ','
  55: TOK_IDENTIFIER  '!x'
  55: TOK_STAR        '*'
  55: TOK_INTEGER_LITERAL '2'
  55: TOK_RPAREN      ')'
  55: TOK_SEMICOLON   ';'
  57: TOK_LBRACE      '{'
  58: TOK_KW_INTEIRO  'inteiro'
  58: TOK_IDENTIFIER  '!temp'
  58: TOK_ASSIGN      '='
  58: TOK_INTEGER_LITERAL '100'
  58: TOK_SEMICOLON   ';'
  59: TOK_LBRACE      '{'
  60: TOK_KW_DECIMAL  'decimal'
  60: TOK_IDENTIFIER  '!local'
  60: TOK_ASSIGN      '='
  60: TOK_DECIMAL_LITERAL '2.5'
  60: TOK_SEMICOLON   ';'
  61: TOK_KW_ESCREVA  'escreva'
  61: TOK_LPAREN      '('
  61: TOK_STRING_LITERAL 'Valor local:'
  61: TOK_COMMA       ','
  61: TOK_IDENTIFIER  '!local'
  61: TOK_RPAREN      ')'
  61: TOK_SEMICOLON   ';'
  62: TOK_RBRACE      '}'
  63: TOK_KW_ESCREVA  'escreva'
  63: TOK_LPAREN      '('
  63: TOK_STRING_LITERAL 'Valor temp:'
  63: TOK_COMMA       ','
  63: TOK_IDENTIFIER  '!temp'
  63: TOK_RPAREN      ')'
  63: TOK_SEMICOLON   ';'
  64: TOK_RBRACE      '}'
  66: TOK_IDENTIFIER  '!resultado'
  66: TOK_ASSIGN      '='
  66: TOK_LPAREN      '('
  66: TOK_IDENTIFIER  '!a'
  66: TOK_PLUS        '+'
  66: TOK_IDENTIFIER  '!b'
  66: TOK_RPAREN      ')'
  66: TOK_STAR        '*'
  66: TOK_LPAREN      '('
  66: TOK_IDENTIFIER  '!c'
  66: TOK_MINUS       '-'
  66: TOK_IDENTIFIER  '!d'
  66: TOK_RPAREN      ')'
  66: TOK_SLASH       '/'
  66: TOK_LPAREN      '('
  66: TOK_IDENTIFIER  '!e'
  66: TOK_PLUS        '+'
  66: TOK_INTEGER_LITERAL '1'
  [31mErro sint√°tico na linha 70: Esperado '}' para fechar programa principal[0m
66: TOK_RPAREN      ')'
  66: TOK_SEMICOLON   ';'
  68: TOK_IDENTIFIER  '!complexo'
  68: TOK_ASSIGN      '='
  68: TOK_LPAREN      '('
  68: TOK_LPAREN      '('
  68: TOK_IDENTIFIER  '!a'
  68: TOK_PLUS        '+'
  68: TOK_IDENTIFIER  '!b'
  68: TOK_RPAREN      ')'
  68: TOK_STAR        '*'
  68: TOK_LPAREN      '('
  68: TOK_IDENTIFIER  '!c'
  68: TOK_PLUS        '+'
  68: TOK_IDENTIFIER  '!d'
  68: TOK_RPAREN      ')'
  68: TOK_RPAREN      ')'
  68: TOK_PLUS        '+'
  68: TOK_LPAREN      '('
  68: TOK_LPAREN      '('
  68: TOK_IDENTIFIER  '!e'
  68: TOK_PLUS        '+'
  68: TOK_IDENTIFIER  '!f'
  68: TOK_RPAREN      ')'
  68: TOK_STAR        '*'
  68: TOK_LPAREN      '('
  68: TOK_IDENTIFIER  '!g'
  68: TOK_PLUS        '+'
  68: TOK_IDENTIFIER  '!h'
  68: TOK_RPAREN      ')'
  68: TOK_RPAREN      ')'
  68: TOK_SEMICOLON   ';'
  69: TOK_RBRACE      '}'
  70: TOK_EOF         ''
[32mAn√°lise l√©xica conclu√≠da com sucesso![0m

[34m=== AN√ÅLISE SINT√ÅTICA ===[0m
[31mErros encontrados durante a an√°lise sint√°tica.[0m
